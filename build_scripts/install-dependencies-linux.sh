#!/bin/bash

# Define color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

# Function to display colored output
print_colored() {
    color=$1
    message=$2
    echo -e "${color}${message}${NC}"
}

# Step 0: Update system and install required packages
print_colored "${YELLOW}" "Updating system and installing required packages..."
sudo apt update
sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
if [ $? -eq 0 ]; then
    print_colored "${GREEN}" "System update and package installation completed successfully."
else
    print_colored "${RED}" "Failed to update system or install packages. Exiting script."
    exit 1
fi

# Step 1: Install Go
go_version=$(go version 2>/dev/null | awk '{print $3}' | cut -d'/' -f3)
if [ -n "$go_version" ] && [ "$(printf '%s\n' "$go_version" '>=' "1.17")" = "1" ]; then
    print_colored "${GREEN}" "Go version ${go_version} is already installed."
else
    print_colored "${YELLOW}" "Installing Go..."
    go_version="1.22.1"
    go_file="go${go_version}.linux-amd64.tar.gz"
    curl -OL "https://golang.org/dl/${go_file}"
    if [ $? -eq 0 ]; then
        sudo rm -rf /usr/local/go
        sudo tar -C /usr/local -xzf "${go_file}"
        rm "${go_file}"
        echo 'export PATH=$PATH:/usr/local/go/bin' | sudo tee -a /etc/profile
        source /etc/profile
        print_colored "${GREEN}" "Go ${go_version} installation completed successfully."
    else
        print_colored "${RED}" "Failed to install Go. Exiting script."
        exit 1
    fi
fi

# Step 2: Install Docker and Docker Compose
if ! command -v docker &> /dev/null; then
    print_colored "${YELLOW}" "Installing Docker..."
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    sudo apt update
    sudo apt install -y docker-ce docker-ce-cli containerd.io
    if [ $? -eq 0 ]; then
        print_colored "${GREEN}" "Docker installation completed successfully."
    else
        print_colored "${RED}" "Failed to install Docker. Exiting script."
        exit 1
    fi
else
    print_colored "${GREEN}" "Docker is already installed."
fi

if ! command -v docker-compose &> /dev/null; then
    print_colored "${YELLOW}" "Installing Docker Compose..."
    sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    if [ $? -eq 0 ]; then
        print_colored "${GREEN}" "Docker Compose installation completed successfully."
    else
        print_colored "${RED}" "Failed to install Docker Compose. Exiting script."
        exit 1
    fi
else
    print_colored "${GREEN}" "Docker Compose is already installed."
fi

# Step 3: Install kubectl
if ! command -v kubectl &> /dev/null; then
    print_colored "${YELLOW}" "Installing kubectl..."
    curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    chmod +x ./kubectl
    sudo mv ./kubectl /usr/local/bin/kubectl
    if [ $? -eq 0 ]; then
        print_colored "${GREEN}" "kubectl installation completed successfully."
    else
        print_colored "${RED}" "Failed to install kubectl. Exiting script."
        exit 1
    fi
else
    print_colored "${GREEN}" "kubectl is already installed."
fi

# Step 4: Install grype
if ! command -v grype &> /dev/null; then
    print_colored "${YELLOW}" "Installing grype..."
    curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
    if [ $? -eq 0 ]; then
        print_colored "${GREEN}" "grype installation completed successfully."
    else
        print_colored "${RED}" "Failed to install grype. Exiting script."
        exit 1
    fi
else
    print_colored "${GREEN}" "grype is already installed."
fi

print_colored "${GREEN}" "All installations completed successfully."
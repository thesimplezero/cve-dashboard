import json

def load_json_from_file(file_path):
    """
    Load JSON data from a file given its file path.
    """
    with open(file_path, 'r') as file:
        return json.load(file)

def extract_prometheus_queries(panel, queries):
    """
    Recursive function to extract Prometheus queries from panels, including nested panels.
    """
    if 'type' in panel and panel['type'] == 'row' and 'panels' in panel:
        # This panel is a row containing nested panels
        for nested_panel in panel['panels']:
            extract_prometheus_queries(nested_panel, queries)
    elif 'targets' in panel:
        for target in panel['targets']:
            if 'expr' in target and 'datasource' in target and target['datasource'].get('type') == 'prometheus':
                # This target contains a Prometheus query
                panel_title = panel.get('title', 'No Title')
                if panel_title not in queries:
                    queries[panel_title] = []
                queries[panel_title].append(target['expr'])

def extract_metrics(data):
    """
    Extract Prometheus queries from the JSON data structure.
    """
    queries = {}
    for panel in data.get('panels', []):
        extract_prometheus_queries(panel, queries)
    return queries

def main():
    # Ask the user for the path to the JSON file
    file_path = input("Enter the path to the JSON file: ")
    try:
        # Load the JSON data from the file
        data = load_json_from_file(file_path)
        
        # Extract Prometheus queries from the loaded data
        extracted_queries = extract_metrics(data)
        
        # Output the result
        print(json.dumps(extracted_queries, indent=2))
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    main()
